#!/usr/bin/env python
#coding:utf-8
import threading,sys
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import SocketPool

from ss.abtest_new import VersionService

class ThriftVersionService(threading.local):

    def __init__(self, host, port, timeout=0.23, conn_timeout=0.05):
        transport = SocketPool.TSocketPool(host, port, timeout, conn_timeout)
        transport = TTransport.TBufferedTransport(transport)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = VersionService.Client(protocol)
        self.client.transport = transport

    def get_version_with_user_request(self, properties):
        try:
            self.client.transport.open()
            rsp = self.client.get_version_with_user_request(properties)
            return rsp
        finally:
            self.client.transport.close()

    def get_version_with_user_request_only_for_app_settings(self, properties):
        try:
            self.client.transport.open()
            rsp = self.client.get_version_with_user_request_only_for_app_settings(properties)
            return rsp
        finally:
            self.client.transport.close()


# -*- coding: utf-8 -*-
import unittest
import sys
import logging

from django import http
from mock import patch
from pyutil.alarm.django_alarm_handler import DjangoAlarmHandler
from mock_nsq_http_writer import MockNsqHttpWriter


@patch('pyutil.alarm._nsq_writer', MockNsqHttpWriter())
class TestDjangoAlarmHandler(unittest.TestCase):
    def setUp(self):
        self.logger = logging.getLogger()
        self.logger.addHandler(DjangoAlarmHandler())

    def testLogging(self):
        """
        模拟django处理uncaught exception
        """
        request = http.HttpRequest()
        request.path = '/a/b/c'
        request.method = "GET"
        try:
            raise Exception('uncaught exception')
        except Exception as e:
            self.logger.error('Internal Server Error: %s' % request.path,
                              exc_info=sys.exc_info(),
                              extra={
                                  'status_code': 500,
                                  'request': request
                              }
            )
        #
        try:
            raise Exception('uncaught exception')
        except Exception as e:
            self.logger.error('中文test Internal Server Error: %s' % request.path,
                              exc_info=sys.exc_info(),
                              extra={
                                  'status_code': 500,
                                  'request': request
                              }
            )
        self.assertTrue(True)

#!/usr/bin/env python
#coding:utf-8
import threading
from datetime import datetime
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import TSocketPool
from pyutil.program.icrawler_util import str_dict
from ss.article.article_comment_classify import CommentClassify
from ss.article.article_comment_classify.ttypes import CommentClassifyReq

class ThriftCommentClassifier(threading.local):

    def __init__(self, host, port):
        transport = TSocketPool.TSocketPool(host, port)
        transport = TTransport.TBufferedTransport(transport)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = CommentClassify.Client(protocol)
        self.client.transport = transport

    def classify(self, about, comment, extra={}):
        self.unicode2utf8(comment)
        str_dict(comment)
        req = CommentClassifyReq(about, comment, extra)
        try:
            self.client.transport.open()
            rsp = self.client.classify(req)
            return rsp.status, rsp.attitude, rsp.msg
        finally:
            self.client.transport.close()

    def unicode2utf8(self, comment):
        for k, v in comment.iteritems():
            if isinstance(v, unicode):
                comment[k] = v.encode('utf8')
            elif isinstance(v, datetime):
                comment[k] = v.strftime('%Y-%m-%d %H:%M:%S')

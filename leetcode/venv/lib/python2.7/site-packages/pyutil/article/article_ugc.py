#!/usr/bin/env python
#coding:utf-8
import threading
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import TSocketPool
from pyutil.program.icrawler_util import str_dict
from ss.article.article_ugc import Ugc
from ss.article.article_ugc.ttypes import Req

class ThriftUgc(threading.local):

    def __init__(self, host, port):
        transport = TSocketPool.TSocketPool(host, port)
        transport = TTransport.TBufferedTransport(transport)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = Ugc.Client(protocol)
        self.client.transport = transport

    def ugc(self, message_id, content, title, publish_time, source, url, article_abstract, need_dedup, tag, info):
        req = Req(message_id, content, title, publish_time, source, url, article_abstract, need_dedup, tag, info)
        str_dict(req)
        try:
            self.client.transport.open()
            rsp = self.client.ugc(req)
            return rsp
        finally:
            self.client.transport.close()

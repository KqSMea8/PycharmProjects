#!/usr/bin/env python
#coding:utf-8
import threading
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import SocketPool
from pyutil.program.icrawler_util import str_dict
from kmeans import KmeansClassifyService
from kmeans.ttypes import KmeansClassifyReq, KmeansClassifyRsp

class ThriftKmeansClassify(threading.local):

    def __init__(self, host, port, timeout=2, conn_timeout=0.2):
        transport = SocketPool.TSocketPool(host, port, timeout, conn_timeout)
        transport = TTransport.TBufferedTransport(transport)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = KmeansClassifyService.Client(protocol)
        self.client.transport = transport

    def get(self, req):
        try:
            self.client.transport.open()
            rsp = self.client.get(req)
            return rsp
        finally:
            self.client.transport.close()

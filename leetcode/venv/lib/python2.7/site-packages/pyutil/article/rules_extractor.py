#!/usr/bin/env python
#coding:utf-8
import threading
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import TSocketPool
from pyutil.program.icrawler_util import str_dict
from ss.article.rules_extractor import Extract
from ss.article.rules_extractor.ttypes import Req, Rsp

class ThriftRulesExtractor(threading.local):

    def __init__(self, host, port):
        transport = TSocketPool.TSocketPool(host, port)
        transport = TTransport.TBufferedTransport(transport)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = Extract.Client(protocol)
        self.client.transport = transport

    def extract(self, url='', body='', info={}):
        req = Req(body=body, url=url, info=info)
        str_dict(req)
        try:
            self.client.transport.open()
            rsp = self.client.extract(req)
            return rsp.status, rsp.results, rsp.msg
        finally:
            self.client.transport.close()

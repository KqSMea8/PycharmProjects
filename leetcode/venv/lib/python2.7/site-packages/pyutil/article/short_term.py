#!/usr/bin/env python
#coding:utf-8
import threading
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import SocketPool
from pyutil.program.icrawler_util import str_dict
from ss.article.short_term import ShortTerm

class ThriftShortTerm(threading.local):

    def __init__(self, host, port, timeout=1.0, conn_timeout=0.2):
        self.socketpool = SocketPool.TSocketPool(host, port, timeout, conn_timeout)
        transport = TTransport.TBufferedTransport(self.socketpool)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = ShortTerm.Client(protocol)
        self.client.transport = transport

    def group_list(self, req):
        try:
            self.client.transport.open()
            rsp = self.client.group_list(req)
            return rsp
        finally:
            self.client.transport.close()
    
    def get_peer_addr(self):
        return "%s:%s" % (self.socketpool.host, self.socketpool.port)

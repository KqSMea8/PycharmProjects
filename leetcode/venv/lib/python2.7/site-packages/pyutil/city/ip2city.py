#_*_ coding: utf-8 _*_
import pdb, re, time, os, urllib
from datetime import datetime, timedelta
from pyutil.city import get_city_name, get_city_code
from pyutil.program.conf import Conf
from pyutil.program.db import DAL
from pyutil.cache.cache_manager import get_local_cache

conf = Conf('/opt/tiger/ss_conf/ss/common.conf')

cache = get_local_cache(conf.get_values('memcache6'))
recommend_dal = DAL(host=conf.ss_recommend_read_host, 
                    port=conf.ss_recommend_read_port, 
                    user=conf.ss_recommend_read_user, 
                    passwd=conf.ss_recommend_read_password, 
                    name=conf.ss_recommend_name)

IP2CITY_CACHE_KEY_TPL = 'ip2city:%s:%s'
IP2CITY_CACHE_VERSION = 2.0

def make_key(ip):
    ip_ = '.'.join(ip.split('.')[:3]) + '.*'
    key = IP2CITY_CACHE_KEY_TPL % (ip_, IP2CITY_CACHE_VERSION)
    return key, ip_


def get_city_from_ip(ip):
    key, ip_ = make_key(ip) 
    city = cache.get(key)
    if city == None:
        min_time = datetime.now() - timedelta(days=30)
        sql = 'select city from ip2city where ip="%s" order by modify_time desc limit 1' % ip_
        recommend_dal.execute(sql)
        row = recommend_dal.cursor.fetchone()
        city = row['city'] if row else ''
        cache.set(key, city, 86400*7)

    city = city if city else None
    if city and isinstance(city, str):
        city = city.decode('utf8')
    return city 


if __name__ == '__main__':
    print get_city_from_ip('60.210.18.136')
    print get_city_from_ip('123.185.140.19')
    print get_city_from_ip('221.201.216.156')
    print get_city_from_ip('211.36.144.11')

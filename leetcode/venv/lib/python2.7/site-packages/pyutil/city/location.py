#_*_ coding: utf-8 _*_

import json, os, re

LOCATION_JSON = None
MUNICIPALITY = [u'北京', u'上海', u'天津', u'重庆', u'澳门', u'香港', u'台湾']

def _get_coutry(code):
    return dict([(c['code'], c) for c in LOCATION_JSON['location']['coutryregion']]).get(str(code))

def _get_state(coutry, code):
    return dict([(c['code'], c) for c in coutry.get('state', [])]).get(str(code))

def _get_city(state, code):
    return dict([(c['code'], c) for c in state.get('city', [])]).get(str(code))

def _get_region(city, code):
    return dict([(c['code'], c) for c in city.get('region', [])]).get(str(code))


def get_location_name(coutry_code, province_code, city_code):
    init()
    coutry = _get_coutry(coutry_code)
    state = _get_state(coutry, province_code) if coutry else None
    city = _get_city(state, city_code) if state else None

    coutry_name = coutry['name'] if coutry else ""
    province_name = state['name'] if state else ""
    city_name = city['name'] if city else ""
    return coutry_name, province_name, city_name

def get_cities(province_code, coutry_code=1):
    init()
    coutry = _get_coutry(coutry_code)
    state = _get_state(coutry, province_code) if coutry else None
    cities =  dict([(c['code'], c['name']) for c in state.get('city', [])])
    return cities

def get_city_tuple():
    init()
    city_tuple = (u'未知', -1),
    china = _get_coutry(1)
    state = china['state']
    for x in state:
        if x['name'] in MUNICIPALITY:
            city_tuple += (x['name'], int(x['code']+'0000')),
            continue
        for r in x['city']:
            if len(r['code']) > 2:
                code = '%s%s' % (x['code'], '0'+r['code'] if len(r['code'])==3 else r['code'])
            else:
                code = '%s%s00' % (x['code'], '0'+r['code'] if len(r['code'])==1 else r['code'])
            city_tuple += (r['name'], int(code)),
    return city_tuple

def init():
    global LOCATION_JSON
    if LOCATION_JSON is not None:
        return
    with open(os.path.join(os.path.dirname(__file__), 'location.json'), 'r') as f:
        LOCATION_JSON = json.load(f)

def get_location_json():
    init()
    return LOCATION_JSON

if __name__ == "__main__":
    coutry, province, city = get_location_name(1, 11, 101)
    print coutry, province, city

    coutry, province, city = get_location_name(1, "13", "2")
    print coutry, province, city

    coutry, province, city = get_location_name('ABW', "11", "2")
    print coutry, province, city

    coutry, province, city = get_location_name('USA', "WA", "SEA")
    print coutry, province, city

    coutry, province, city = get_location_name(0, 0, 0)
    print coutry, province, city

    coutry, province, city = get_location_name(None, None, None)
    print coutry, province, city

    from pprint import pprint
    cities = get_cities(44, 1)
    for c, name in cities.items():
        print c, name

    city_tuple = get_city_tuple()
    for name, code in city_tuple:
        print code, name

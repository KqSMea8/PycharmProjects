# -*- coding: utf-8 -*-
import logging
import sys
import os

def set_log_level(level, name=None):
    try:
        logging.getLogger(name).setLevel(level)
    except Exception:
        logging.exception("Failed to set %s log-level: %s", name, level)

def set_requests_log_level(level):
    set_log_level(level, name="requests")

if sys.version_info > (3, 0):
    is_python3 = True
else:
    is_python3 = False

is_perf_test = True if os.getenv('TCE_PERF_TEST') == '1' else False
perf_prefix = os.getenv('TCE_PERF_PREFIX', 'tce_perf_test_a3b30390ca0c_')
list_type = 'consul'
whitelist = {}
blacklist = {}
for part in os.getenv('TCE_PERF_WHITELIST', '').split('&'):
    if isinstance(part, str) and part.startswith(list_type):
        arr = part.split(':')
        if len(arr) > 1:
            whitelist[arr[1]] = None
for part in os.getenv('TCE_PERF_BLACKLIST', '').split('&'):
    if isinstance(part, str) and part.startswith(list_type):
        arr = part.split(':')
        if len(arr) > 1:
            blacklist[arr[1]] = None

def add_perf_prefix(name):
    if not is_perf_test or isinstance(name, str) and name.startswith(perf_prefix):
        return name
    if len(blacklist) > 0:
        if name in blacklist:
            return perf_prefix + name
        else:
            return name
    elif name in whitelist:
        return name
    return perf_prefix + name


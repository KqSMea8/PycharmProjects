#coding=utf8
import time
from pyutil.consul import watch
from pyutil.consul import register
from pyutil.consul import bridge
from pyutil.consul import util
from pyutil.consul import discovery
from pyutil.consul import defaults

TEST_SERVICE0='caojianhua_test_service_0'
TEST_SERVICE1='caojianhua_test_service_1'
TEST_SERVICE2='caojianhua_test_service_2'

watchids = {}

def start_watch():
    print("start_watch")
    def watch_cb(name, nodes):
        print('watch result:', name, nodes)
    watchids[TEST_SERVICE0]=watch.add_watch(TEST_SERVICE0, watch_cb);
    print(watchids[TEST_SERVICE0])
    for idx in watch.add_multiple_watch([TEST_SERVICE1, TEST_SERVICE2], watch_cb):
        print(idx)

    watchids[TEST_SERVICE1]=1
    watchids[TEST_SERVICE2]=2

def remove_watch():
    print("remove_watch")
    watch.remove_watch(TEST_SERVICE2, 2)
    return

def start_register():
    print("start_register...")
    register.init_register(None)
    register.define_service(TEST_SERVICE0, 8080, {'tags':'test'})
    register.define_service(TEST_SERVICE1, 8080, {'tags':'test'})
    register.define_service(TEST_SERVICE2, 8080, {'tags':'test'})
    register.start_register(True)

def stop_register():
    print("stop_register...")
    register.stop_register()

def translate_test():
    print("translate_test")
    print(bridge.translate_one(TEST_SERVICE0))
    print(bridge.translate([TEST_SERVICE0, TEST_SERVICE1, TEST_SERVICE2]))

def translate_conf_test():
    print("translate_conf_test")
    print(bridge.translate_conf({'ip':'consul:caojianhua_test_service_0?ip:port'}))
    print(bridge.translate_conf({'port':'consul:caojianhua_test_service_0?port'}))
    print(bridge.translate_conf({'ip':'consul:caojianhua_test_service_0:7777?ip:port'}))
    print(bridge.translate_conf({'port':'consul:caojianhua_test_service_0:7777?port'}))

def get_instance_list_test():
    print("get_instance_list_test")
    print(util.get_instance_list(TEST_SERVICE0))
    print(util.get_instance_list(TEST_SERVICE1))

def health_node_test():
    print("health_node_test")
    sd = discovery.ServiceDiscovery(defaults.agent_host, defaults.agent_port)
    print(sd.health_node(TEST_SERVICE0))

if __name__ == '__main__':
    print('start')
    start_watch()
    remove_watch()
    start_register()
    time.sleep(10)
    translate_test()
    translate_conf_test()
    get_instance_list_test()
    health_node_test()
    stop_register()
    time.sleep(60)
    print('end')

    # TODO
    # register.py alter_proc_suffix
    #
# -*- coding: utf-8 -*-
import threading
import time
import os

import mock
import nose.tools

from pyutil.consul import bridge
from pyutil.consul import discovery

origin_sd = bridge.sd

def teardown():
    bridge.sd = origin_sd

def setup():
    bridge.sd = mock.MagicMock()

@nose.with_setup(setup)
def test__translate_conf_retry_ok():
    pass

@nose.with_setup(setup)
@nose.tools.raises(discovery.ServiceDiscoveryException)
def test__translate_conf_retry_one_time():
    raw_conf = dict(foo="consul:foo?host")
    bridge.sd.translate_conf.side_effect = discovery.ServiceDiscoveryException("")
    os.environ["RETRY_CONSUL_TRANSLATE_CONF"] = "1"

    try:
        bridge._translate_conf(raw_conf)
    finally:
        del os.environ["RETRY_CONSUL_TRANSLATE_CONF"]
        nose.tools.eq_(2, bridge.sd.translate_conf.call_count)

@nose.with_setup(setup)
@nose.tools.raises(discovery.ServiceDiscoveryException)
def test__translate_conf_retry_2_at_most():
    raw_conf = dict(foo="consul:foo?host")
    bridge.sd.translate_conf.side_effect = discovery.ServiceDiscoveryException("")
    os.environ["RETRY_CONSUL_TRANSLATE_CONF"] = "5"

    try:
        bridge._translate_conf(raw_conf)
    finally:
        del os.environ["RETRY_CONSUL_TRANSLATE_CONF"]
        nose.tools.eq_(3, bridge.sd.translate_conf.call_count)

@nose.with_setup(setup)
@nose.tools.raises(discovery.ServiceDiscoveryException)
def test__translate_conf_fail():
    raw_conf = dict(foo="consul:foo?host")
    bridge.sd.translate_conf.side_effect = discovery.ServiceDiscoveryException("")

    try:
        bridge._translate_conf(raw_conf)
    finally:
        nose.tools.eq_(1, bridge.sd.translate_conf.call_count)

#/usr/bin/python
# -*- coding: utf-8 -*-r
from collector import collect
import socket, logging

class DatabusLogHandler(logging.Handler):
    def __init__(self, channel, key=None, codec=2, extra=None, block=False):
        logging.Handler.__init__(self)
        self.channel = channel
        self.key = str(key) if key is not None else None
        self.codec = codec
        self.block = block
        self.hostname = socket.gethostname()
        if extra:
            self.extra = ' '.join(extra)
        else:
            self.extra = ''

    def emit(self, record):
        setattr(record, 'hostname', self.hostname)
        if self.extra:
            record = "%s %s\n" % (self.extra, self.format(record))
        else:
            record = "%s\n" % (self.format(record))
        if isinstance(record, unicode):
            record = record.encode('utf8', 'ignore')
        collect(self.channel, str(record), self.key, codec=self.codec, block=self.block, silent=True)


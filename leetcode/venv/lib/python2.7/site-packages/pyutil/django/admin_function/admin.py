# coding: utf-8
from django import forms
from django.contrib import admin
from pyutil.django.admin_function.models import AdminFunction

from pyutil.program.fmtutil import fmt_datetime
from pyutil.django.admin_function.util import FunctionUrlPatternsCache
from pyutil.django.admin_function.models import UserGroup
from pyutil.django.kani.utils import dj_kani_system_handler, get_admin_function_kani_key, get_kani_django_conf
from pyutil.kani.utils import kani_dsn, BadKaniRequest, KaniSystemConfError

KANI_PERM_URL = kani_dsn + 'kani/apps/{app_id}/resources/{resource_key}/'


class UserGroupAdminLite(admin.ModelAdmin):
    filter_horizontal = ('users', 'admins', 'admin_functions')
    non_superuser_disabled_fields = ('name', 'admins', 'admin_functions', 'extra')

    def get_readonly_fields(self, request, obj=None):
        if request.user.is_superuser:
            return ['extra']
        return self.non_superuser_disabled_fields

    def queryset(self, request):
        """
        UserGroupManager has 'view' and 'change' permissions to UserGroups managed by him/her
        """
        qs = super(UserGroupAdminLite, self).queryset(request)
        if request.user.is_superuser:
            return qs
        return qs.filter(admins=request.user)


class AdminFunctionForm(forms.ModelForm):
    register_kani_resource = forms.BooleanField(u'注册kani资源', help_text=u'注册kani资源')

    def __init__(self, *args, **kwargs):
        instance = kwargs.get('instance')
        register_kani_resource_init = False
        help_text = u'是否注册kani资源'
        if instance:
            try:
                kani = dj_kani_system_handler()
                resource = kani.get_resource_info(get_admin_function_kani_key(instance.id))
            except BadKaniRequest as ex:
                resource = {}
            register_kani_resource_init = True if resource else False
            if resource:
                help_text = u"已注册kani资源: <a href='%skani/admin/resource/edit/?id=%s' target='_blank'>点击编辑</a>" % (kani_dsn, resource['id'])
        self.base_fields['register_kani_resource'] = forms.BooleanField(initial=register_kani_resource_init, help_text=help_text, required=False)
        super(AdminFunctionForm, self).__init__(*args, **kwargs)

    class Meta(object):
        model = AdminFunction
        exclude = ('department', )


class AdminFunctionAdmin(admin.ModelAdmin):
    try:
        kani = dj_kani_system_handler()
        app_id, _, _ = get_kani_django_conf()
        form = AdminFunctionForm
        list_display = ('id', 'name_', 'status', 'patterns_', 'resource_', 'create_modify_time', 'note_',)
        fields = ('name', 'status', 'patterns', 'register_kani_resource', 'note',)
    except KaniSystemConfError as ex:
        app_id = 0
        list_display = ('id', 'name_', 'status', 'patterns_', 'create_modify_time', 'note_',)
        fields = ('name', 'status', 'patterns', 'note',)

    def name_(self, obj):
        return u'%s(app-%s)' % (obj.name, obj.app_id)

    def create_modify_time(self, obj):
        return u'%s<br />%s' % (fmt_datetime(obj.create_time, default='-'), fmt_datetime(obj.modify_time, default='-'))
    create_modify_time.short_description = '创建/修改'
    create_modify_time.allow_tags = True

    def patterns_(self, obj):
        return '<br />'.join(obj.patterns.split())
    patterns_.short_description = 'url patterns'
    patterns_.allow_tags = True

    def note_(self, obj):
        return '<br />'.join(obj.note.split())
    note_.short_description = '描述/备注'
    note_.allow_tags = True

    def resource_(self, obj):
        try:
            resource = self.kani.get_resource_info(get_admin_function_kani_key(obj.id))
        except:
            resource = {}
        edit_url_ = '%skani/resources' % kani_dsn
        create_url_ = '%skani/admin/resource/new/' % kani_dsn
        if resource:
            edit_link = "<a style='color: #53A93F' href='{url}/{id}/' target='_blank'>编辑</a>".format(url=edit_url_, id=resource.get('id'))
            perm_link = "<a style='color: #53A93F' href='{url}/{id}/permissions/' target='_blank'>权限配置</a>".format(url=edit_url_, id=resource.get('id'))
            resource_html = edit_link + ' | ' + perm_link
        else:
            resource_html = "<a style='color: #DD4444' href='{url}' target='_blank'>未注册</a>".format(url=create_url_)
        return resource_html
    resource_.short_description = 'kani 资源'
    resource_.allow_tags = True

    def get_queryset(self, request):
        qs = super(AdminFunctionAdmin, self).get_queryset(request)
        return qs.filter(app_id=request.GET.get('app_id') or self.app_id)

    def save_model(self, request, obj, form, change):
        if obj.app_id == 0:
            obj.app_id = self.app_id
        obj.save()
        data = form.data
        if 'register_kani_resource' in data:
            try:
                self.kani.register_resource(
                    name=obj.name,
                    key=get_admin_function_kani_key(obj.id),
                    creator_key=request.user.username,
                    owner_keys=[request.user.username],
                    description=obj.note,
                    temporary_authorize=True,
                    admin_url=request.build_absolute_uri(),
                )
            except:
                pass
        cache = FunctionUrlPatternsCache()
        cache.update_func_url_patterns()

admin.site.register(AdminFunction, AdminFunctionAdmin)
admin.site.register(UserGroup, UserGroupAdminLite)

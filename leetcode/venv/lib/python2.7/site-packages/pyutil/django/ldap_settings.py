#!/usr/bin/env python
# coding: utf-8
__author__ = 'zhenghuabin'

import ldap
from django_auth_ldap.config import LDAPSearch, NestedGroupOfNamesType

# ldap config
AUTH_LDAP_SERVER_URI = "ldaps://pool.ldap.d.byted.org"
ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
AUTH_LDAP_BIND_AS_AUTHENTICATING_USER = True

# simple bind mode
AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=people,dc=bytedance,dc=com"
AUTH_LDAP_USER_ATTR_MAP = {
    "last_name": "sn",
    "email": "mail",
}

# find groups recursively
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("ou=groups,dc=bytedance,dc=com", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)")
AUTH_LDAP_GROUP_TYPE = NestedGroupOfNamesType(name_attr="cn")
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_staff": [
        'ou=groups,dc=bytedance,dc=com',
    ],
}

# do not calculate group permissions according ldap groups
AUTH_LDAP_FIND_GROUP_PERMS = False

# do not sync groups with ldap groups
AUTH_LDAP_MIRROR_GROUPS = False

AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 300

# update user info on every login
# NOTE: it can be disabled if there's performance issue, however, user's information, such as email, staff status,
# will not be updated in django user.
AUTH_LDAP_ALWAYS_UPDATE_USER = False

# end ldap configs


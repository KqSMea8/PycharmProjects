import sys, tempfile, hotshot, hotshot.stats

from django.conf import settings
from cStringIO import StringIO

class ProfileMiddleware(object):
    """
    Displays hotshot profiling for any view.
    http://yoursite.com/yourview/?prof

    Add the "prof" key to query string by appending ?prof (or &prof=)
    and you'll see the profiling results in your browser.
    It's set up to only be available in django's debug mode,
    but you really shouldn't add this middleware to any production configuration.
    * Only tested on Linux

    usage:
        install middleware:

            MIDDLEWARE_CLASSES = (
                ......

                'pyutil.django.middleware.profile.ProfileMiddleware',
            )

        Add the following lines in your settings.py (remember to change ip addr):

            DEBUG_IPS = {'114.249.132.25'}

        add prof param in request url:
            http://www.feifei.com/group/1104707520/?prof
    """
    def process_request(self, request):
        if self.debug_mode(request):
            self.tmpfile = tempfile.NamedTemporaryFile()
            self.prof = hotshot.Profile(self.tmpfile.name)

    def process_view(self, request, callback, callback_args, callback_kwargs):
        if self.debug_mode(request):
            return self.prof.runcall(callback, request, *callback_args, **callback_kwargs)

    def process_response(self, request, response):
        if self.debug_mode(request):
            self.prof.close()

            out = StringIO()

            try:
                old_stdout = sys.stdout
                sys.stdout = out

                stats = hotshot.stats.load(self.tmpfile.name)
                stats.sort_stats('time', 'calls')
                stats.print_stats()
            finally:
                sys.stdout = old_stdout

            stats_str = out.getvalue()

            if response and response.content and stats_str:
                response.content = "<pre>" + stats_str + "</pre>"

        return response

    def debug_mode(self, request):
        if not hasattr(settings, 'DEBUG'):
            return False

        if not settings.DEBUG:
            return False

        if not hasattr(settings, 'DEBUG_IPS'):
            return False

        if not isinstance(settings.DEBUG_IPS, set):
            return False

        from pyutil.django.util import get_ip
        return get_ip(request) in settings.DEBUG_IPS and request.GET.has_key('prof')

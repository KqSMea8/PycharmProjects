#!/usr/bin/env python
# coding: utf-8
__author__ = 'zhenghuabin'

from django.utils import unittest
from django.contrib.auth.models import User, Group, Permission
from pyutil.django.user_group.models import UserGroup
from django.contrib.contenttypes.models import ContentType


class UserGroupBackendTestCase(unittest.TestCase):
    def test_get_all_permissions(self):
        password = 'a'
        u1 = User.objects.create(
            username='u1',
            password=password
        )
        ct1 = ContentType.objects.create(name='type1', app_label='app1', model='model1')
        u1.user_permissions.add(
            Permission.objects.create(
                name='perm_u1',
                codename='perm_u1',
                content_type=ct1,
            )
        )
        g1 = Group.objects.create(
            name='g1',
        )
        g1.permissions.add(
            Permission.objects.create(
                name='perm_g1',
                codename='perm_g1',
                content_type=ct1,
            )
        )
        u1.groups.add(g1)
        self.assertEqual(u1.get_all_permissions(), set(['app1.perm_u1', 'app1.perm_g1']))

        # create user group
        ug1 = UserGroup.objects.create(
            name='ug1',
        )
        ug1.users.add(u1)
        ug1.permissions.add(
            Permission.objects.create(
                name='perm_ug1_perm1',
                codename='perm_ug1_perm1',
                content_type=ct1,
            )
        )
        u1 = User.objects.get(username='u1')
        self.assertEqual(u1.get_all_permissions(), set(['app1.perm_u1', 'app1.perm_g1', 'app1.perm_ug1_perm1']))

        # add groups to UserGroup
        g2 = Group.objects.create(
            name='g2',
        )
        g2.permissions.add(
            Permission.objects.create(
                name='perm_g2',
                codename='perm_g2',
                content_type=ct1,
            )
        )
        ug1.groups.add(g2)
        u1 = User.objects.get(username='u1')
        self.assertEqual(u1.get_all_permissions(),
                         set(['app1.perm_u1', 'app1.perm_g1', 'app1.perm_ug1_perm1', 'app1.perm_g2']))

        # 建立user_group管理员的user_group，并将u1作为member加入其中
        ug_ug_admins = UserGroup.objects.create(
            name='ug_ug_admins',
        )
        ug_ug_admins.permissions.add(
            Permission.objects.create(
                name='perm_admin_ug',
                codename='perm_admin_ug',
                content_type=ct1,
            )
        )
        ug_ug_admins.users.add(u1)
        # 将u1设为ug1的管理员
        ug1.admins.add(u1)
        u1 = User.objects.get(username='u1')
        self.assertEqual(u1.get_all_permissions(),
                         set(['app1.perm_u1', 'app1.perm_g1', 'app1.perm_ug1_perm1', 'app1.perm_g2',
                              'app1.perm_admin_ug']))




from pyutil.etcd import etcd_client_init
from pyutil.program.conf import Conf
from pyutil.program.pathutil import get_fullpath

"""
@see http://python-etcd.readthedocs.org/en/latest/api.html
"""
# default client
client = etcd_client_init.etcd_client_rw
# or config client with conf file
conf = Conf(get_fullpath(__file__, '../conf/etcd.conf'))
etcd_client_init.config_etcd_client(conf)
client = etcd_client_init.etcd_client_rw

print("create or update")
keys = [
    '/node_0_7/node_1_7/node_2_7/aa',
    '/node_0_7/node_1_7/node_2_7/aa'
]
for key in keys:
    try:
        result = client.write(key, 'bbb', dir=False)
    except Exception as e:
        print("exception: %s" % e)
    else:
        print result
print ""


print("set value")
keys = [
    '/node_0_7/node_1_7/node_2_7/aa',
    '/node_0_7/node_1_7/node_2_7/bb'
]
for key in keys:
    try:
        result = client.set(key, 'aaa')
    except Exception as e:
        print("exception: %s" % e)
    else:
        print result
print ""

print("create dir: ")
keys = [
    '/node_0_7/node_1_7/node_2_7/aa_dir',
    '/node_0_7/node_1_7/node_2_7/aa_dir/bb_dir'
]
for key in keys:
    try:
        result = client.write(key, None, dir=True)
    except Exception as e:
        print("exception: %s" % e)
    else:
        print(result)
print ""


print("get value")
keys = [ 
    '/node_0_7/node_1_7/node_2_7/aa',
]
for key in keys:
    try:
        result = client.get(key)
    except Exception as e:
        print("exception: %s" % e)
    else:
        print(result)
print ""

print("read value")
keys = [ 
    '/node_0_7/node_1_7/node_2_7/aa',
    '/node_0_7/node_1_7/node_2_7/aa_dir',
]
for key in keys:
    try:
        result = client.read(key, recursive=True)
    except Exception as e:
        print("exception: %s" % e)
    else:
        print result
print ""


print("delete keys")
keys = [ 
    '/node_0_7/node_1_7/node_2_7/aa',
    '/node_0_7/node_1_7/node_2_7/bb',
    '/node_0_7/node_1_7/node_2_7/aa_dir',
]
for key in keys:
    try:
        result = client.delete(key, recursive=True)
    except Exception as e:
        print("exception: %s" % e)
    else:
        print result
print ""


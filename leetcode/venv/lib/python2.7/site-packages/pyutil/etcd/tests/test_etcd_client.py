# -*- coding: utf-8 -*-
import unittest
from pyutil import etcd
import bz2
import time
from pyutil.program.conf import Conf
from pyutil.program.pathutil import get_fullpath
config = Conf(get_fullpath(__file__, '../conf/etcd.conf'))

class TestEtcdClient(unittest.TestCase):
    values = [ 
            'asdfsgglksdf,./<>? []\\{}1234567890-=!@#$%^&*()_+~', 
            'test中文 ok',
            u'test中文 ok',
    ]
    def test_compress(self):
        for i, value in enumerate(self.values):
            c = etcd.EtcdClient(config, compress_response=True)
            key = '/node_0_7/node_1_7/node_2_7/test_compress_%d' % i
            c.set(key, value)
            time.sleep(0.1)
            value_out = c.get(key).value
            if isinstance(value_out, unicode) and not isinstance(value, unicode):
                value_out = value_out.encode('utf-8')
            self.assertEqual(value_out, value)

    def test_encode(self):
        data = ""
        with open('domain_article_rule.txt', 'r') as fp:
            data = fp.read()
        compressed = bz2.compress(data)
        c = etcd.EtcdClient(config)
        key = '/node_0_7/node_1_7/node_2_7/test_encode'
        c.set(key, compressed)
        time.sleep(0.1)
        value_out = c.get(key).value
        self.assertEqual(value_out, compressed)
    def test_compress_and_encode(self):
        data = ""
        with open('domain_article_rule.txt', 'r') as fp:
            data = fp.read()
        compressed = bz2.compress(data)
        c = etcd.EtcdClient(config, compress_response=True)
        key = '/node_0_7/node_1_7/node_2_7/test_compress_and_encode'
        c.set(key, compressed)
        time.sleep(0.1)
        value_out = c.get(key).value
        self.assertEqual(value_out, compressed)

if __name__ == '__main__': 
    unittest.main()


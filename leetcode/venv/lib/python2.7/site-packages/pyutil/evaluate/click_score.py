#!/bin/env python
#!coding=utf-8

from __future__ import division
from collections import defaultdict
from datetime import datetime, timedelta
import time, logging
import ujson
import sys
import traceback

from ss_lib.ua.action_type import ActionType

class PlatformType:
    ANDROID = 0
    IOS = 1

class ScoreConfidence:
    HIGH = 3    #with pct & stay_time
    MID = 2     #with only stay_time
    LOW = 1     #without pct and stay_time, only timeout guess
    NONE = 0    #no score given

class ClickScorer(object):
    def score(self, actions, is_timeout):
        d = self.__extract_feature(actions)
        if self.__ready_for_score(d) or is_timeout:
            d = self.__gen_score(d)
            d.update({'timeout':is_timeout})
            return d
        else:
            return {'score_confidence': ScoreConfidence.NONE}

    def __extract_feature(self, actions):
        d = {}
        platform = None
        version = None
        for act in actions:
            if platform is None:
                platform = PlatformType.ANDROID if (act.get('package', '').find('android') > 0) else None
                platform = PlatformType.IOS if act.get('package', '').find('iphone') > 0 else platform
            if version is None:
                version = act.get('app_version', None)

            t = act['type']
            if t in ActionType.read_pct_action_set:
                if 'page_count' not in act or 'pct' not in act:
                    continue
                d['page_count'] = max(1, act['page_count'])
                d['pct'] = max(min(100, act['pct']), d.get('pct', 0))
            elif t in (ActionType.long_stay_action_set | ActionType.short_stay_action_set):
                if 'st' not in act:
                    continue
                d['stay_time'] = max(d.get('stay_time', 0), act['st'])
            elif t in ActionType.non_read_action_set:
                #for explict dislike
                if t in ActionType.dislike_action_set:
                    d['dl'] = 1 if 'dl' not in d else d['dl'] + 1
                d[t] = 1 if t not in d else d[t] + 1

        d['platform'] = platform
        d['version'] = version
        d['dislike_cnt'] = d.get('dl', 0) - d.get(ActionType.undislike, 0)
        d['fav_cnt'] = d.get(ActionType.favorite, 0) - d.get(ActionType.unfavorite, 0)
        d['share_cnt'] = d.get(ActionType.share, 0) + d.get(ActionType.share_private, 0)
        d['digg_cnt'] = d.get(ActionType.digg, 0) - d.get(ActionType.bury, 0)
        return d

    def __ready_for_score(self, d):
        #ready when obvious signal exists
        if d['dislike_cnt'] > 0 or d['fav_cnt'] > 0 or d['share_cnt'] > 0:
            return True

        #wait if no stay time
        if 'stay_time' not in d:
            return False

        #check if need to wait 'read_pct'
        wait_pct = False
        v1, v2 = 0, 0
        try:
            version = d['version']
            if version and version.startswith('v'):
                version = version[1:]
            if version == "unknown":
                wait_pct = True
            elif version and len(version) >= 3:
                v1 = int(version[0])
                v2 = int(version[2])
        except:
            logging.exception("parse version err: %s is not valid number format" % (d['version']))
            wait_pct = True
        if d['platform'] == PlatformType.ANDROID and (v1 >= 4 or (v1 == 3 and v2 >= 6)):
            wait_pct = True
        elif d['platform'] == PlatformType.IOS and v1 >= 4:
            wait_pct = True

        # wait for 'read_pct'
        if wait_pct and 'pct' not in d:
            return False
        else:
            return True

    # once called, a score must be given
    def __gen_score(self, d):
        if d['dislike_cnt'] > 0:
            d.update({'score_confidence': ScoreConfidence.HIGH, 'click_score': -1})
            return d
        if d['share_cnt'] > 0:
            d.update({'score_confidence': ScoreConfidence.HIGH, 'click_score': 2})
            return d
        if d['fav_cnt'] > 0:
            d.update({'score_confidence': ScoreConfidence.HIGH, 'click_score': 1.5})
            return d

        score_confidence = ScoreConfidence.LOW
        if 'pct' not in d:
            if 'stay_time' not in d:
                #low score given when timeout with no stay_time & pct
                click_score = 0.1
            else:
                click_score = min(d['stay_time'] / 60, 1)
                score_confidence = ScoreConfidence.MID
        else:
            pct_score = min(d['pct'] / 100, 1)

            if 'stay_time' not in d:
                click_score = 0.1 * pct_score
                score_confidence = ScoreConfidence.LOW
            else:
                st = d['stay_time']
                pc = d['page_count']

                #target time per page goes smaller when page num goes bigger
                #relatively, short groups are punished and long ones are bonused
                target_st = (300 * pc) / (pc + 20)
                st_score = min(st / target_st, 1)

                #high st_score, low pct_score => mid click_score
                #low st_score, high pct_score => low click_score
                #read 80% still able to score 0.9
                click_score = st_score * (pct_score ** 0.5)
                score_confidence = ScoreConfidence.HIGH

        if d['digg_cnt'] > 0:
            click_score = min(1, click_score * 1.8)

        d.update({'score_confidence': score_confidence, 'click_score': click_score})
        return d

if __name__ == '__main__':
    key = '14:2668244974:3722296935'
    actions = [{'uid': 2646582235, 'package': 'com.ss.android.article.news', 'ut': 14, 'gid': 3732449616, 't': 1418741429.0, 'kt': 1418741485, 'app_version': '4.2.3', 'type': 10
    }, {'uid': 2646582235, 'package': 'com.ss.android.article.news', 'ut': 14, 'gid': 3732449616, 't': 1418741434.0, 'kt': 1418741485, 'app_version': '4.2.3', 'type': 34
    }, {'uid': 2646582235, 'package': 'com.ss.android.article.news', 'ut': 14, 'gid': 3732449616, 't': 1418741437.0, 'kt': 1418741485, 'app_version': '4.2.3', 'type': 28
    }, {'uid': 2646582235, 'package': 'com.ss.android.article.news', 'ut': 14, 'st': 35, 'gid': 3732449616, 't': 1418741465.0, 'kt': 1418741485, 'app_version': '4.2.3', 'type': 22
    }, {'uid': 2646582235, 'package': 'com.ss.android.article.news', 'ut': 14, 'page_count': 23, 'pct': 76, 'gid': 3732449616, 't': 1418741465.0, 'kt': 1418741485, 'app_version': '4.2.3', 'type': 108
    },
    {'uid': 2359561600, 'extra': {'filter_words': (('9', '1'),)}, 'ut': 14, 'gid': 3815736989, 't': 1421163885, 'kt': 1421164154, 'type': 124}
    ]
    s = ClickScorer()
    score = s.score(actions, False)
    print score




#!/usr/bin/env python
#coding:utf-8

"""
    Hbase Thrift Admin Client
    对hbase thrift client适度封装，线程不安全，提供多thrift server支持，切换失效thrift server功能。


    基本使用方法如下：
        #初始化
        import hbase_admin_client
        from pyutil.program.sys_conf import Conf

        conf = Conf('/home/huxiao/repos/ss_conf/ss/hbase.conf')
        admin_client = hbase_admin_client.HbaseClient(conf.hbase_thrift_proxy_farm)

        #获取table列表
        existing_tables = admin_client.get_table_names()
        logging.debug("list tables :%s"%str(existing_tables))

        table_name = "zzz_unittest_table"
        if existing_tables and table_name in existing_tables:
            #disable 表
            admin_client.disable_table(self.table_name)

            #delete 表，危险操作
            admin_client.delete_table(self.table_name)

        #建表
        desc = ColumnDescriptor(name="c:", maxVersions=1)
        admin_client.create_table(self.table_name, [desc])
"""


from hbase_client import HbaseClient


class HbaseAdminClient(HbaseClient):
    """
        HbaseAdminClient is a wrapper for hbase thrift client, support admin tools for hbase
        Attention: Not Thread Safe
    """
    def __init__(self, *args, **kargs):
        HbaseClient.__init__(self, *args, **kargs)

    def create_table(self, table_name, column_families):
        """
            Create Table 
            desc = ColumnDescriptor(name="c:", maxVersions=1)
            column_families = [desc]
        """
        return self._process_cmd("createTable", table_name, column_families)
    
    def disable_table(self, table_name):
        """
            Disable Table, delete table need table is disabled
        """
        return self._process_cmd("disableTable", table_name)

    def delete_table(self, table_name):
        """
            Delete Table
        """
        return self._process_cmd("deleteTable", table_name)

    def get_table_names(self):
        """
            Return table lists of hbase
        """
        return self.client.getTableNames()


def main():
    print __doc__

if __name__ == "__main__":
    main()

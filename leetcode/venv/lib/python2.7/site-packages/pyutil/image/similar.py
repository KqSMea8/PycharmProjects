#!/usr/bin/env python
import os, sys, logging, signal
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import TSocketPool
from ss.image.similar import similar
from ss.image.similar.ttypes import similar_req_t, similar_rsp_t

class ThriftSimilar(object):

    def __init__(self, host, port):
        transport = TSocketPool.TSocketPool(host, port)
        self.transport = TTransport.TBufferedTransport(transport)
        self.protocol = TBinaryProtocol.TBinaryProtocol(self.transport)
        self.client = similar.Client(self.protocol)

    def add(self, data, uri, item_id):
        req = similar_req_t(uri, item_id, data)
        self.transport.open()
        try:
            rsp = self.client.add(req)
        finally:
            self.transport.close()
        return rsp.status, rsp.images

    def get(self, data, uri, item_id):
        req = similar_req_t(uri, item_id, data)
        self.transport.open()
        try:
            rsp = self.client.get(req)
        finally:
            self.transport.close()
        return rsp.status, rsp.images

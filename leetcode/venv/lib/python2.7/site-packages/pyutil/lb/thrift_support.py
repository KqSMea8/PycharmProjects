#!/usr/bin/python

from thrift.transport import *
from thrift.transport.TSocket import TSocket
from thrift.protocol import TBinaryProtocol
from client import get_service_connection

class LBTSocket(TSocket):
    def __init__(self, service_name, request_id=None, timeout=1.0, interact_timeout=None):
        self.service_name = service_name
        self.request_id = request_id
        # To use the bootstrap processing timeout.
        self.timeout = timeout
        self.interact_timeout = timeout if interact_timeout is None else interact_timeout
        TSocket.__init__(self, None, None, None)
        self.handle = None

    def open(self):
        socket = get_service_connection(self.service_name, request_id=self.request_id, timeout=self.timeout)
        socket.settimeout(self.interact_timeout)
        self.host, self.port = socket.getpeername()
        self.handle = socket


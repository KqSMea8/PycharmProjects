#!/usr/bin/env python
# coding: utf-8
__author__ = 'zhenghuabin'

import unittest

from pyutil.memcache.client import MemcacheClient


class TestBasicCommands(unittest.TestCase):
    def setUp(self):
        servers = [("127.0.0.1", 11211), ]
        self.c = MemcacheClient(servers, timeout=1, prefix='xx', cache_cas=True)
        self.c2 = MemcacheClient(servers, timeout=1, prefix='xx', cache_cas=True)

    def test_replace(self):
        key = '1'
        self.assertNotEqual(self.c.set(key, '1'), 0)
        self.assertNotEqual(self.c.replace(key, '2'), 0)
        key = '2'
        self.assertEqual(self.c.replace(key, '2'), 0)

    def test_prepend(self):
        key = '3'
        self.assertNotEqual(self.c.set(key, '3'), 0)
        self.assertNotEqual(self.c.prepend(key, '2'), 0)
        self.assertEqual(self.c.get(key), '23')

    def test_gets_cas(self):
        key = '4'
        self.assertNotEqual(self.c.set(key, '1'), 0)
        if self.c.gets(key) == '1':
            self.c.cas(key, '2')
        self.assertEqual(self.c.get(key), '2')

        self.assertEqual(self.c.gets(key), '2')
        self.assertEqual(self.c2.gets(key), '2')
        self.assertNotEqual(self.c.cas(key, '3'), 0)
        self.assertEqual(self.c.get(key), '3')
        self.assertEqual(self.c2.cas(key, '4'), 0)
        self.assertNotEqual(self.c2.get(key), '4')

    def test_incr(self):
        key = '5'
        self.assertNotEqual(self.c.set(key, 9), 0)
        self.assertEqual(self.c.incr(key, 3), 12)
        self.assertEqual(self.c.get(key), 12)

    def test_decr(self):
        key = '6'
        self.assertNotEqual(self.c.set(key, 9), 0)
        self.assertEqual(self.c.decr(key, 3), 6)
        self.assertEqual(self.c.get(key), 6)


if __name__ == '__main__':
    unittest.main()

#!/usr/bin/python
# coding: utf-8
from pyhive import presto
from pyutil.consul.bridge import translate_one
from thrift import Thrift
from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from complexity.ComplexityService import Client as ComplexityClient
from complexity.ttypes import TQueryBackendType, InvalidHqlException
import random, time, logging

COORDINATOR_ONLY = True
PRESTO_SERVICE_NAME = 'presto-coordinator-prod.service.lf'
REWRITE_SERVICE_NAME = 'query_complexity.service.lf'
DEFAULT_CLUSTER = ''
DEFAULT_USER = 'tiger'

def rewrite_query(hql):
    attempt = 0
    ok = False
    while attempt <= 10:
        attempt += 1
        try:
            endpoints = translate_one(REWRITE_SERVICE_NAME)
            endpoint = random.choice(endpoints)
            transport = TSocket.TSocket(endpoint[0], endpoint[1])
            transport = TTransport.TFramedTransport(transport)
            transport.open()
            protocol = TBinaryProtocol.TBinaryProtocol(transport)
            client = ComplexityClient(protocol)
            if isinstance(hql, unicode):
                hql = hql.encode('utf-8')
            return client.rewrite(hql, TQueryBackendType.PRESTO)
        except InvalidHqlException, e:
            raise e
        except Exception, e:
            logging.exception(e)
            time.sleep(0.2)
            continue
    raise Exception('Failed to contact query rewrite service')

class PrestoClient:
    def __init__(self, cluster, username, coordinator_only, rewrite_queries):
        self.cluster = cluster
        self.username = username
        self.coordinator_only = coordinator_only
        self.rewrite_queries = rewrite_queries

    def cursor(self):
        endpoint = random.choice(translate_one(PRESTO_SERVICE_NAME))
        c = presto.connect(endpoint[0], port=endpoint[1]).cursor()
        if self.rewrite_queries:
            real_execute = c.execute
            def execute_proxy(hql):
                hql = rewrite_query(hql)
                logging.debug('Rewritten query: %s' % hql)
                real_execute(hql)
            c.execute = execute_proxy
        return c

    def __enter__(self):
        return self

    def __exit__(self, type, value, traceback):
        pass

    def close(self):
        pass

def connect(protocol, cluster=DEFAULT_CLUSTER, username=DEFAULT_USER, rewrite_queries=True):
    return PrestoClient(cluster, username, COORDINATOR_ONLY, rewrite_queries)
    
if __name__ == '__main__':
    with connect('presto', rewrite_queries=True) as client:
        with client.cursor() as cursor:
            # cursor.execute(u"SELECT SUM(IF(CAST(value AS BIGINT) > 1800000, 1800, CAST(value AS BIGINT)/1000)) FROM app_log_daily WHERE date = '20160720' AND           product_name = 'news_article' AND tag = 'stay_category' AND label != 'video' and label != '组图' and label != '__all__';")
            cursor.execute(u"SELECT label FROM app_log_daily WHERE label = '组图' LIMIT 100")
            print cursor.fetchone()
            print cursor.fetchall()

#!/usr/bin/python
# coding: utf-8
from pyutil.consul.bridge import translate_one
from thrift import Thrift
from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from complexity.ComplexityService import Client as ComplexityClient
from complexity.ttypes import TQueryBackendType, InvalidHqlException
import random, time, logging

REWRITE_SERVICE_NAME = 'query_complexity.service.lf'

def parse_hql(hql):
    attempt = 0
    ok = False
    while attempt <= 10:
        attempt += 1
        try:
            endpoints = translate_one(REWRITE_SERVICE_NAME)
            endpoint = random.choice(endpoints)
            transport = TSocket.TSocket(endpoint[0], endpoint[1])
            transport = TTransport.TFramedTransport(transport)
            transport.open()
            protocol = TBinaryProtocol.TBinaryProtocol(transport)
            client = ComplexityClient(protocol)
            if isinstance(hql, unicode):
                hql = hql.encode('utf-8')
            client.parse(hql)
            return True, None
        except InvalidHqlException, e:
            return False, e
        except Exception, e:
            logging.exception(e)
            time.sleep(0.2)
            continue
    raise Exception('Failed to contact query rewrite service')

if __name__ == '__main__':
    import sys
    print parse_hql(sys.argv[1])

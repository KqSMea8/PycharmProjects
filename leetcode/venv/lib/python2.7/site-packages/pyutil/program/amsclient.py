#!/usr/bin/env python
# coding: utf-8

"""
注意!!!!!
amsclient接口已经过时，请使用pyutil.program.ams.Ams
为了兼容行，amslicent封装了ams的接口
"""

import os
import sys
import time
import json
import logging
import requests
import memcache

from pyutil.program.ams import Ams
from chadc.get_dc import get_dc


class AmsClient():
    def __init__(self):
        self.ams = Ams()

    def get(self, tags, dc=""):
        hosts = []
        tag_hosts = {}
        if "common" in tags:
            tag_hosts = self.ams.mget_tag_hosts([])
        else:
            tag_hosts = self.ams.mget_tag_hosts(tags)
        for k, v in tag_hosts.items():
            hosts.extend(v)
        # filterd dc
        ips = []
        if dc:
            if not isinstance(dc, basestring):
                raise TypeError("dcs must list")
            for host in list(set(hosts)):
                if get_dc(host) == dc:
                    ips.append(host)
            return ips
        return list(set(hosts))

    def get_mc(self, tags):
        return self.get(tags)


if __name__ == "__main__":
    h = AmsClient()
    #print h.get(["data.sort"])
    print h.get(["inf.cassandra.data"])
    print h.get(["common"])
    print h.get_mc(["inf.cassandra.data"])
    print h.get([])
    print h.get(["data.dev"], "hl")

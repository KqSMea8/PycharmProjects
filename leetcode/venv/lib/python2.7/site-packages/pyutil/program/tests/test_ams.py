#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import unittest
from nose.tools import assert_equal, assert_true
from nose.tools import with_setup

sys.path.append("..")
from ams import Ams

def setUp():
    print "==========test begin================"

def tearDown():
    print "==========test completed============"

def test_get_host_tags():
    amsclient = Ams(mode=2)
    ret_remote = amsclient.get_host_tags()
    assert_true("idc" in ret_remote)
    amsclient = Ams(mode=1)
    ret_local = amsclient.get_host_tags()
    assert_true("idc" in ret_local)
    assert_equal(ret_remote, ret_local)
    amsclient = Ams(mode=0)
    ret_all = amsclient.get_host_tags()
    assert_true("idc" in ret_all)
    assert_equal(ret_local, ret_all)

def test_get_host_tags():
    amsclient = Ams(mode=2)
    ret_remote = amsclient.get_tag_hosts("inf.cpplib")
    assert_true(ret_remote != [])
    amsclient = Ams(mode=1)
    ret_local = amsclient.get_tag_hosts("inf.cpplib")
    assert_true(ret_local != [])
    assert_equal(ret_remote, ret_local)
    amsclient = Ams(mode=0)
    ret_all = amsclient.get_tag_hosts("inf.cpplib")
    assert_true(ret_all != [])
    assert_equal(ret_local, ret_all)

def test_dc():
    amsclient = Ams()
    dc = amsclient.get_dc(host="10.4.17.163")
    assert_equal(dc, "idc.tjhy")
    dc = amsclient.get_dc()
    assert_equal(dc, "idc.lfyjd")

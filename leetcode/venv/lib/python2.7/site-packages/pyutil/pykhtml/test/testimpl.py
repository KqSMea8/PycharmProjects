#-*- coding: utf-8 -*-
import sys, os

sys.path.append('..')

import pykhtml
import pykhtmlutil

testmethod = ""
browser = None

def parse(b):
        global browser
        browser = b
        method = globals()[testmethod]
        if method:
                method()
        else:
                fail("Can't find method: %s" % testmethod)

        pykhtml.stopEventLoop()

def fail(msg):
        print("FAIL: %s" % msg)

def success(msg):
        print("PASS: %s" % msg)

def testGetInnerHTML():
        doc = browser.document
        try:
                pykhtmlutil.getInnerHTML(list(doc.getElementsByTagName("html"))[0])
        except:
                fail(sys._getframe().f_code.co_name)
                print(sys.exc_info())
                return

        success(sys._getframe().f_code.co_name)

def testGetAttributeValue():
        doc = browser.document
        elem = pykhtmlutil.getElementByXPath(doc, '/html/body/a[2]')
        try:
                value = pykhtmlutil.getAttributeValue(elem, 'title')
                if u'中文属性2' == value:
                        success("Value of attribute")
                else:
                        fail("value of attribute %s" % value)
        except:
                fail(sys._getframe().f_code.co_name)
                print(sys.exc_info())
                return

        success(sys._getframe().f_code.co_name)

def testGetElementsTexts(): 
        doc = browser.document
        elem = pykhtmlutil.getElementByXPath(doc, '/html/body/ul')
        elems = pykhtmlutil.getChildrenByTagName(elem, 'li')
        texts = pykhtmlutil.getElementsTexts(elems)
        if u'第一' == texts[0] and u'第二' == texts[1]:
                success(sys._getframe().f_code.co_name)
        else:
                fail(sys._getframe().f_code.co_name)

def testGetChildrenByTagName():
        doc = browser.document
        elem = pykhtmlutil.getElementByXPath(doc, '/html/body/ul')
        elems = pykhtmlutil.getChildrenByTagName(elem, 'li')
        if len(elems) == 2:
                success(sys._getframe().f_code.co_name)
        else:
                fail(sys._getframe().f_code.co_name)

def testGetElementByXPath():
        doc = browser.document
        elem = pykhtmlutil.getElementByXPath(doc, '/html/body/ul')
        if elem:
                success('Get existing element with XPath')
        else:
                fail('Get existing element with XPath')

        elem = pykhtmlutil.getElementByXPath(doc, '/html/body/uu')
        if not elem:
                success('Get none existing element with XPath')
        else:
                fail('Get none existing element with XPath')

def main():
        if len(sys.argv) != 2:
                print("Usage: %s testmethod" % sys.argv[0])
                return
        global testmethod
        testmethod = sys.argv[1]
        url = 'file://%s/test.html' % os.path.split(os.path.realpath(__file__))[0]
        b = pykhtml.Browser()
        b.load(url, parse)
        pykhtml.startEventLoop()

if __name__ == '__main__':
        main()

#!/usr/bin/env python

import logging

frame_service_cluster_map = {
        'toutiao.service.redis.web_discuss_forum_count':'redis_web_discuss_forum_count',
        }

def get_cluster_info(service, psm, servs):
    global frame_service_cluster_map 
    if service in frame_service_cluster_map:
        cluster = frame_service_cluster_map[service]
    else:
        cluster = service
    
    try:
        import frame
        curpsm = frame.get_psm()
        if psm == None:
            psm = curpsm
        if cluster.startswith('redis_'):
            service = 'toutiao.redis.' + cluster[len('redis_'):]
        elif cluster.startswith('memcache_'):
            service = 'toutiao.memcache.' + cluster[len('memcache_'):]
        else:
            service = None
            logging.warn('unknown service for cluster:%s' % cluster)
    except Exception, excp:
        service = None
        logging.warn('get cluster info excp:%s' % excp)

    if psm == None:
        service = None

    if servs == None:
        from pyutil.program.conf import Conf
        if cluster.startswith('redis'):
            conf = Conf("/opt/tiger/ss_conf/ss/redis_web.conf")
            servs = conf.get_values(cluster)
            if len(servs) == 0 or (len(servs) == 1 and len(servs[0]) == 0):
                conf = Conf("/opt/tiger/ss_conf/ss/redis.conf")
            servs = conf.get_values(cluster)
        elif cluster.startswith('memcache'):
            conf = Conf("/opt/tiger/ss_conf/ss/memcache.conf")
            servs = conf.get_values(cluster)
        else:
            servs = []
    return (cluster, psm, servs, service)


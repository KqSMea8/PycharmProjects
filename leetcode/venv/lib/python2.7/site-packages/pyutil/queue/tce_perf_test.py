import os

_tce_perf_test_topic_prefix = 'tpt_'
_tce_perf_test_env = 'TCE_PERF_TEST'
_tce_perf_test_env_value = '1'
_tce_perf_test_whitelist_env = 'TCE_PERF_WHITELIST'
_tce_perf_test_whitelist_nsq_type = 'nsq'

_is_perf_test = True if os.getenv(_tce_perf_test_env, None) == _tce_perf_test_env_value else False
_tce_perf_test_whitelist = {}


def _set_perf_test_whitelist():
    global _tce_perf_test_whitelist
    tce_perf_test_whitelist = os.getenv(_tce_perf_test_whitelist_env, '')
    parts = tce_perf_test_whitelist.split('&')
    for part in parts:
        if part.startswith(_tce_perf_test_whitelist_nsq_type):
            _tce_perf_test_whitelist[part[len(_tce_perf_test_whitelist_nsq_type)+1:]] = True


_set_perf_test_whitelist()


def adjust_topic_name(topic):
    if _is_perf_test:
        if topic not in _tce_perf_test_whitelist:
            return '%s%s' % (_tce_perf_test_topic_prefix, topic)

    return topic

import struct, sys, time

from index_service_client import ThriftIndexServiceClient
from index_updater_client import ThriftIndexUpdaterClient
from index_service.ttypes import BatchUpdateReq, BatchUpdateRsp, GidScore, SearchReq, FidScore, SearchKvReq, SearchKvRsp, BatchUpdateKvRsp, BatchUpdateKvReq,SearchFeatureReq, FeatureScore, OpReq, SubSearchFeatureReq, MultiSearchFeatureReq
from index_updater.ttypes import UpdateKvMultiSvrReq, UpdateMultiSvrRsp
from profile_recommend.profile_recall.utils.user_profile_cache import UserCPKeywordCache
from pyutil.program.lru import ExpiringLRUCache
from ss_data.profile.user_store import ThriftUserProfileStore
from pyutil.program.sys_conf import SysConf
from pyutil.program.db import DAL
from pyutil.program.conf import Conf
from ss_data.profile.feature_util import FeatureUtil
from data import *


sys_conf = SysConf('/opt/tiger/ss_conf/ss')

#struct GidScore{
#    1:i64 gid,
#    2:double score,
#    3:i64 create_time
#}
def batch_update():
    gid_score = GidScore(gid=1423200, score=0.18, create_time=12346234)
    gid_score1 = GidScore(gid=1423201, score=0.114, create_time=12346235)
    gid_score2 = GidScore(gid=1423202, score=0.124, create_time=12346236)
    gid_score3 = GidScore(gid=1423203, score=0.324, create_time=12346236)
    req = BatchUpdateReq(prefix="kw:0", inverted_index={98123:[gid_score, gid_score1, gid_score2, gid_score3]}, index_name="newdb")     
    req.expire_time = 30
    client = ThriftIndexServiceClient(["127.0.0.1"],[9988])
    rsp = client.batch_update(req)
    print rsp

#struct SearchReq {
#    1:string prefix,
#    2:list<FidScore> fid_arr,
#    3:i32 start_time=0,
#    4:i32 end_time=0,
#    5:i32 count=100,
#    6:optional list<i64> impr_gids
#}
#struct FidScore {
#    1:i32 fid,
#    2:double score
#}

def fake_profile():
    fid_score_list = []
    for fid in ori_data.keys():
        fid_score_list.append(FidScore(fid, 0.1)) 
    return fid_score_list

key_span = 3600*2

def make_keys(start_time, end_time):
    keys = []
    st = int(start_time / key_span) * key_span
    while st < end_time:
        ts = int(st/key_span)
        keys.append(ts)
        st += key_span
    return keys

def test_fresh() :
    #prefix = "kw:0"
    #prefix ="chn:gallery_shortterm_hot:5443492141:v1"
    #prefix ="chn:video_shortterm_hot:3431225546:v2"
    #prefix = "chn:video_lt_user_cluster_rate2_div:3431225546:v2"
    #prefix = "chn:video_longterm_topic_rate:3431225546:v2"
    #prefix = "chn:video_fresh:3431225546:v2"
    prefix = "chn:video_longterm_channel_rate:3431225546:v2"
    #prefix = "channel:3462339786"
    end_time = int(time.time())
    start_time = end_time - 20*86400
    keys = make_keys(start_time, end_time)
    #keys = [201006, 201007, 201008, 201009, 201010, 201011, 201012, 201013, 201014, 201015, 201016, 201017, 201018, 201019, 201020, 201021, 201022, 201023, 201024, 201025, 201026, 201027, 201028, 201029, 201030]
    #keys = [12345687]
    fid_score = []
    for key in keys:
        fid_score.append(FidScore(key, 1))
    req = SearchReq(prefix=prefix,fid_score=fid_score, impr_gids=[1,2,4])
    #req = SearchReq(prefix=prefix,fid_score=fid_score, index_name="channel_inverted_index")
    #req = SearchReq(prefix=prefix,fid_score=[FidScore(123, 0.1)])
    #req.end_time = end_time
    #req.start_time = start_time
    req.method = 0
    #req.count =4000
    req.need_extra_info = True
    #client = ThriftIndexServiceClient(["10.4.26.148"],[9988], 2)
    #client = ThriftIndexServiceClient(["127.0.0.1"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.18.49"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.26.185"],[9988], 2)
    client = ThriftIndexServiceClient(["10.4.29.49"],[8988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.48"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.51"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.49"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.26.160"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.26.161"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.45"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.52"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.51"],[9988], 2)
    #rsp = client.search_raw(req)
    #print rsp

    rsp = client.search(req)
    #print rsp
    print "================="
    print len(rsp.gid_arr)
    f_dev = open("51.log","w")
    for g in rsp.gid_arr:
        f_dev.write("%d\t%0.4f%s\n"%(g.gid, g.score, g.extra_info))
    
    client = ThriftIndexServiceClient(["10.4.21.48"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.48"],[9988], 2)
    rsp = client.search(req)
    print "================="
    print len(rsp.gid_arr)
    f_dev = open("48.log","w")
    for g in rsp.gid_arr:
        #f_dev.write("%d\t%0.4f\n"%(g.gid, g.score))
        f_dev.write("%d\t%0.4f%s\n"%(g.gid, g.score, g.extra_info))


def fake_search():
    profile = fake_profile()
    req = SearchReq(prefix="channel_video_keyword_20_go_pos",fid_score=profile)
    req.end_time = time.time()
    req.start_time = req.end_time - 30*86400
    #req.count = 1000
    #req.method = 1

    #req = SearchReq(prefix="channel_video_keyword15_2",fid_score=profile)
    #print req
    #client = ThriftIndexServiceClient(["10.4.17.163"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.21.48"],[9988], 2)
    client = ThriftIndexServiceClient(["10.4.29.50"],[9988], timeout=0.1)
    #client = ThriftIndexServiceClient(["10.4.29.50"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.29.49"],[9988], 2)
    #client = ThriftIndexServiceClient(["10.4.17.163"],[9988])
    rsp = client.search(req)
    #s = set([g.gid for g in rsp.gid_arr])
    #print rsp.gid_arr
    s = [g.gid for g in rsp.gid_arr]
    for g in rsp.gid_arr:
        print g.gid, g.score

def test_kv():
    #index_service_cli = ThriftIndexServiceClient(["10.4.17.163"], [9988]) 
    index_service_cli = ThriftIndexServiceClient(["10.4.29.50"], [9988]) 
    req = SearchKvReq()
    #req.keys = ["article_info_v2_6206925666318565634"]  
    req.keys = ["co_gf_:6206133270620258817:v1.1", "co_gf_:5503321070:v1.1"]  
    #req.index_name = "feed_group_info"
    req.index_name = "channel_online_group_info"
    rsp = index_service_cli.search_kv(req)
    import msgpack
    for key, val in rsp.kvs.iteritems():
        with open("groupinfo.data","w") as f:
            f.write(val)
        print key, msgpack.loads(val)
    #client = ThriftIndexUpdaterClient(["127.0.0.1"], [8382], timeout=10)
    #req = UpdateKvMultiSvrReq()
    #req.server_list = ["127.0.0.1:9988"]
    #update_req = BatchUpdateKvReq()
    #update_req.kvs = {"abc":"1234"}
    #update_req.index_name = "test"
    #req.req = update_req
    #client.update_kv_multi_svr(req)


def search():
    profile_dal = DAL(host=sys_conf.profile_read_host,
                    port=sys_conf.profile_read_port,
                    user=sys_conf.profile_read_user,
                    passwd=sys_conf.profile_read_password,
                    name=sys_conf.profile_db_name)
    feature_util_online = FeatureUtil(profile_dal, channel=True)
    local_cache = ExpiringLRUCache(100000, default_timeout=600)
    user_store = ThriftUserProfileStore(sys_conf.profile_server_host2, sys_conf.profile_server_port2,
                    feature_util=feature_util_online, serv_timeout=1)
    user_cp_keyword_cache = UserCPKeywordCache(local_cache, user_store)
    profile = user_cp_keyword_cache.get_profile(12, 336)
    profile_list = profile.items()
    profile_list.sort(key=lambda p:(p[1]), reverse=True)
    #profile_list = profile_list[:50]
    print profile_list
    #req = SearchReq(prefix="channel_video_keyword15_2",fid_score=[FidScore(k,v) for k,v in profile_list])
    req = SearchReq(prefix="kw:0", fid_score=[FidScore(123,0.2)])
    client = ThriftIndexServiceClient(["10.4.17.163"],[9988])
    #client = ThriftProfileClient(["10.4.29.51"],[9988])
    rsp = client.search(req)
    print [g.gid for g in rsp.gid_arr]
    
def test_search_feature():
    req = SearchFeatureReq(feature_score=[FeatureScore("profile_reco:subscribe:156:v1:day16769_9311986",0.2)], index_name="channel_recall")
    #req = SearchFeatureReq(feature_score=[FeatureScore("rate_recall_feature_channel_41005235__None_v1",0.2)])
    client = ThriftIndexServiceClient(["10.4.17.163"],[9988])
    rsp = client.search_feature(req)
    print rsp

def test_op():
    req = OpReq(2, [])
    client = ThriftIndexServiceClient(["10.4.17.163"],[9988])
    rsp = client.op(req)
    for k, v in rsp.stats.iteritems():
        print k, v

def test_multi():
    subreq = SubSearchFeatureReq()
    subreq.feature_score = [FeatureScore("tc_152932299_16766_None_v1", 0.3)]

    subreq1 = SubSearchFeatureReq()
    subreq1.feature_score = [FeatureScore("tc_152932629_16766_None_v1",0.4)]
    
    req = MultiSearchFeatureReq()
    req.subqueries = []
    req.subqueries.append(subreq)
    req.subqueries.append(subreq1)
    req.prefix = "aaaa"
    req.index_name = "channel_recall"
    req.need_extra_info = True
    req.filter_str = "[3189398972]"
    client = ThriftIndexServiceClient(["127.0.0.1"],[9988])
    rsp = client.multi_search_feature(req)
    print rsp


if __name__ == "__main__":
    if sys.argv[1] == "search":
        search()
    elif sys.argv[1] == "update":
        batch_update()
    elif sys.argv[1] == "fake":
        fake_search()
    elif sys.argv[1] == "fresh":
        test_fresh()
    elif sys.argv[1] == "kv":
        test_kv()
    elif sys.argv[1] == "feature":
        test_search_feature()
    elif sys.argv[1] == "op":
        test_op()
    elif sys.argv[1] == "multi":
        test_multi()

#!/usr/bin/env python
import threading
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import SocketPool3
from ss_thrift_gen.simcard import SimilarCard
from ss_thrift_gen.simcard.ttypes import Request

class SimilarCardExtractor(threading.local):

    def __init__(self, host, port, timeout=0.5, conn_timeout=0.2):
        socket = SocketPool3.TSocketPool(host, port, timeout, conn_timeout)
        transport = TTransport.TFramedTransport(socket)
        protocol = TBinaryProtocol.TBinaryProtocol(transport)
        self.client = SimilarCard.Client(protocol)
        self.client.transport = transport

    def extract(self, gids, top_n, title_threshold, body_threshold):
        req = Request(gids, top_n, title_threshold, body_threshold)
        try:
            self.client.transport.open()
            return self.client.get(req)
        finally:
            self.client.transport.close()
        return None

if __name__ == '__main__':
    import sys
    extractor = SimilarCardExtractor(sys.argv[1], 9679)
    gids = [6295692678026494210, 6295674318466908418]
    print extractor.extract(gids, 2, 0.1, 0.05)

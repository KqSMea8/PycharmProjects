#!/usr/bin/env python
# -*- coding: utf-8 -*-

from perf_lib import *

def main():
    parser, args = parse_args(is_perf_test=False)

    print
    print '[OPTIONS]'

    if ':' in args.cluster: # server list
        args.cluster = args.cluster.split(',')

    args.case_list = args.case.split(',')
    for c in args.case_list:
        if c not in CASE_LIST:
            logging.warning('case %s not supported' % c)
            sys.exit(-1)

    if args.score_range > pow(10, args.score_digits):
        logging.warning('score-range exceeds score-digits')
        sys.exit(-1)

    if 'mget' in args.case_list:
        if args.key_num_in_loop < args.batch_num:
            args.key_num_in_loop = args.batch_num
            logging.warning('key-num-in-loop is less than batch-num, use batch-num as key-num-in-loop')
    args.key_space = args.key_num_in_loop

    print 'cluster=%s, table=%s' % (args.cluster, args.table)
    print 'loop=%d, sleep=%d, stats-interval=%d' % (args.loop, args.sleep, args.stats_interval)

    if 'zadd' in args.case_list:
        print 'value-num=%s, score-digits=%s, score-range=%s' \
            % (args.value_num, args.score_digits, args.score_range)
    if 'zrangebyscore' in args.case_list:
        print 'value-num=%s, score-digits=%s, score-range=%s, access-score-range=%s, access-limit=%s' \
            % (args.value_num, args.score_digits, args.score_range,
            args.access_score_range, args.access_limit)
    if 'mget' in args.case_list:
        print 'batch-num=%s' \
            % (args.batch_num)

    print
    print '[INIT...]'
    checker = Checker(args)

    print
    print '[START TESTING...]'
    checker.run()

if __name__ == '__main__':
    main()


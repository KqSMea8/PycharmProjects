#!/usr/bin/env python
import os, sys, logging, threading
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from pyutil.thrift.transport import TSocketPool
from pyutil.program.icrawler_util import str_dict
from ss.downloader import Download
from ss.downloader.ttypes import Req

class ThriftDownloader(threading.local):

    def __init__(self, host, port, timeout=None):
        transport = TSocketPool.TSocketPool(host, port)
        if timeout:
            transport.setTimeout(timeout * 1000)
        self.transport = TTransport.TBufferedTransport(transport)
        self.protocol = TBinaryProtocol.TBinaryProtocol(self.transport)
        self.client = Download.Client(self.protocol)

    def download(self, url='', info={}):
        req = Req(url=url, info=info)
        str_dict(req)
        self.transport.open()
        try:
            rsp = self.client.download(req)
            return rsp.status, rsp.body, rsp.msg
        finally:
            self.transport.close()

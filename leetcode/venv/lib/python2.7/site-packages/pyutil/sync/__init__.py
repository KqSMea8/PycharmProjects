#!/usr/bin/env python

import json, sys, pdb, zookeeper, threading, signal, logging, time
from datetime import datetime, timedelta


ZOO_OPEN_ACL_UNSAFE = {"perms":0x1f, "scheme":"world", "id" :"anyone"}

class SyncClient:
    def __init__(self, zk_host):
        self.connected = False
        self.cv = threading.Condition()
        self.host = zk_host
        self.zh = None
        self.connect()


    def connect(self):
        def connection_watcher(handle, type, state, path):
            with self.cv:
                if state == zookeeper.CONNECTED_STATE:
                    if self.zh and self.zh != handle:
                        try:
                            zookeeper.close(self.zh)
                            logging.info('reconnect happend')
                        except:
                            logging.exception('error when close zookeeper connection')
                            pass
                    self.connected = True
                self.cv.notify()

        with self.cv:
            self.zh = zookeeper.init(self.host, connection_watcher)
            self.cv.wait(15.0)

        if not self.connected:
            raise Exception("couldn't connect to host - ", self.host)


    def get(self, path):
        try:
            ret = zookeeper.get(self.zh, path)
            if ret:
                value = json.loads(ret[0])
                return value
        except zookeeper.NoNodeException:
            pass
        return None

    def set(self, path, buf):
        self.ensure_create(path)
        buf = json.dumps(buf)
        return zookeeper.set(self.zh, path, buf)

    def set_ephemeral(self, path, buf):
        ''' create ephemeral node
        '''
        self.ensure_create(path, flag=zookeeper.EPHEMERAL)
        buf = json.dumps(buf)
        return zookeeper.set(self.zh, path, buf)

    def delete(self, path):
        return zookeeper.delete(self.zh, path)


    def ensure_create(self, path, data='', flag=0):
        ''' flag: create node type. 0, 1 (zookeeper.EPHEMERAL), 2 (zookeeper.SEQUENCE)
        '''
        sections = path.split('/')
        for i in range(2, len(sections)+1):
            try:
                p = '/'.join(sections[0:i])
                # ephemeral node can't have children node, so can't be a parent node
                zookeeper.create(self.zh, p, data, [ZOO_OPEN_ACL_UNSAFE], 0 if i < len(sections) else flag)
            except zookeeper.NodeExistsException:
                pass



if __name__ == '__main__':
    from pyutil.program.conf import Conf
    conf = Conf('/opt/tiger/ss_conf/ss/zk.conf')
    client = SyncClient(conf.zk_hosts)
    print 'set:', client.set('/test/ct', 10002034)
    print 'value:', client.get('/test/ct')
    print 'value:', client.get('/xxxxx')
    print 'set:', client.set('/recommend/data/user_action_day_log/20130914', 1)
    print 'get:', client.get('/recommend/data/user_action_day_log/20130914')


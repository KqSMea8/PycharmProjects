#!/usr/bin/env python2.7

import argparse
import requests
import time

METRICS_URL = 'http://metrics.byted.org/api/query'

def print_stat(repo):
    print repo
    for key, value in stats[repo].iteritems():
        print '  {0}: {1}'.format(key, value)
    print


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--git', default='*')
    parser.add_argument('--start', default='7d-ago')
    parser.add_argument('--end', default='1s-ago')
    parser.add_argument('--env', default='prod', choices=['dev', 'prod'])
    args = parser.parse_args()

    stats = {
        'total': {}
    }
    repos = args.git.split(',')
    for repo in repos:
        stats[repo] = {}
        for module in ('total', 'success', 'lint', 'checked'):
            post_data = {}
            post_data['start'] = args.start
            post_data['end'] = args.end
            post_data['queries'] = [{
                'aggregator': 'sum',
                'metric': 'truler.%s.%s' % (args.env, module),
                'tags': {
                    'git': repo
                }
            }]

            response = {}
            while True:
                r = requests.post(METRICS_URL, json=post_data)
                if r.status_code == 200:
                    response = r.json()[0]['dps'] if r.json() else {}
                    break
                else:
                    print r.reason
                    time.sleep(2)

            items = [(int(k), v) for k, v in response.iteritems()]
            items.append((1e30, -1))
            items = sorted(items, key=lambda x: x[0])

            number = 0
            last = items[0][1]
            begin = last

            index = 1
            length = len(items)
            while index < length:
                value = items[index][1]
                if value < last:
                    number += last - begin
                    begin = value
                last = value
                index += 1

            stats[repo][module] = number
            stats['total'][module] = stats['total'].get(module, 0) + number
        print_stat(repo)
    print_stat('total')

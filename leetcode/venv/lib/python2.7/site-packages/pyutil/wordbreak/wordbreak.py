#encoding=utf8

import wb

class Token:

    def __init__(self, text, pos):
        self.text = text
        self.pos = pos

    def __str__(self):
        return "(%s,%d)"%(self.text, self.pos)

    def __repr__(self):
        return self.__str__()

class WordBreak:

    def __init__(self, dict_file):
        self.segmentor = wb.DictSegmentor()
        self.segmentor.load_dict_from_file(dict_file)

    def get_tokens(self, text):
        v = wb.TPVector()
        self.segmentor.segment(text, v)
        offset = 0
        tokens = []
        for i in range(len(v)):
            term_pos = v[i]
            begin, end  = wb.get_term_pos(term_pos)
            sub_text = text[begin:end]
            tokens.append(Token(sub_text, offset))
            offset += len(sub_text.decode('utf8'))
        return tokens


if __name__ == '__main__':
    word_dict_path = '/opt/home/liangrubo/repos/pyutil/pyutil/wordbreak/word.dict'
    w = WordBreak(word_dict_path)
    import time
    bt = time.time()
    for i in range(1):
        ts = w.get_tokens('我在阅读轻博客电视呀看#的啊亲情类的歌唱着国家电视阿多丸号')
    print(time.time() - bt)
    print ts
